{"id":261,"date":"2021-04-06T23:12:38","date_gmt":"2021-04-06T23:12:38","guid":{"rendered":"http:\/\/gabybot.com\/?page_id=261"},"modified":"2024-09-02T19:02:37","modified_gmt":"2024-09-02T19:02:37","slug":"drive-subsystem-2","status":"publish","type":"page","link":"http:\/\/gabybot.com\/drive-subsystem-2\/","title":{"rendered":"Drive Subsystem"},"content":{"rendered":"\n<p>The&nbsp;<strong>Drive Subsystem<\/strong>&nbsp;performs the same function as its counterpart in the&nbsp;<strong>Minibot<\/strong>&nbsp;tutorial, namely it will control the two drive motors. In fact you may want to refer to your code for that previous robot as an aid.<\/p>\n\n\n\n<p>The motors for this new robot will use the same&nbsp;<strong><a rel=\"noreferrer noopener\" href=\"\/RobotCoreDoc\/classrobot_core_1_1_p_w_m_motor.html\" target=\"_blank\">PWMMotor<\/a><\/strong> class that you used previously.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>robotCore.PWMMotor.PWMMotor(\n    int \tpwmPin,\n    int \tdirPin \n  )<\/code><\/pre>\n\n\n\n<p>You are, of course, going to need the pin numbers to use:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>  private static final int k_leftMotorPWMPin = Device.M1_1_PWM;\n  private static final int k_leftMotorDirPin = Device.M1_1_DIR;\n  private static final int k_rightMotorPWMPin = Device.M1_2_PWM;\n  private static final int k_rightMotorDirPin = Device.M1_2_DIR;<\/code><\/pre>\n\n\n\n<p>With this information, you should now be able to create your&nbsp;<strong>Drive Subsystem<\/strong>&nbsp;class. Once you have done that, create an&nbsp;<strong>Arcade Drive&nbsp;<\/strong>command and get your robot driving with a joystick. Remember to set your&nbsp;<strong>Arcade Drive<\/strong>&nbsp;command&nbsp;as the&nbsp;<strong>Drive Subsystem\u2019s<\/strong>&nbsp;default command.<\/p>\n\n\n\n<p>Once you have your robot driving you will want to use the&nbsp;<strong>wheel encoders<\/strong>&nbsp;to calibrate the speed as we did in the&nbsp;<strong>MiniBot<\/strong>&nbsp;tutorial. For this robot however, we are using a different kind of encoder called a&nbsp;<strong>Quadrature Encoder<\/strong>. We will still use the&nbsp;<strong><a rel=\"noreferrer noopener\" href=\"\/RobotCoreDoc\/classrobot_core_1_1_encoder.html\" target=\"_blank\">Encoder<\/a>&nbsp;<\/strong>class, but we will set the type to&nbsp;<strong><a rel=\"noreferrer noopener\" href=\"\/RobotCoreDoc\/enumrobot_core_1_1_encoder_1_1_encoder_type.html\" target=\"_blank\">EncoderType.Quadrature<\/a><\/strong>. These encoders use this&nbsp;<a rel=\"noreferrer noopener\" href=\"\/RobotCoreDoc\/classrobot_core_1_1_encoder.html#aa5bb6a2fd515312004438b280e735878\" target=\"_blank\"><strong>constructor<\/strong><\/a>:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>robotCore.Encoder.Encoder(\n    EncoderType \ttype,\n    int \tpin1,\n    int \tpin2, \n  )<\/code><\/pre>\n\n\n\n<p>You will need the pin numbers:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>  private static final int k_leftEncoderIntPin = Device.Q1_INT;\n  private static final int k_leftEncoderDirPin = Device.Q1_DIR;\n  private static final int k_rightEncoderIntPin = Device.Q2_INT;\n  private static final int k_rightEncoderDirPin = Device.Q2_DIR;<\/code><\/pre>\n\n\n\n<p>Once you have created instances of your encoders, remember to set them as the&nbsp;<a href=\"\/RobotCoreDoc\/classrobot_core_1_1_smart_motor.html#a5787f96d5a49ab7c42ce5e0751ca5f9f\" target=\"_blank\" rel=\"noreferrer noopener\">feedback devices<\/a>&nbsp;for your motors.<\/p>\n\n\n\n<p>Finally, create&nbsp;<strong>setPower<\/strong>&nbsp;and&nbsp;<strong>setSpeed<\/strong>&nbsp;functions to control the two motors. You can look back at the&nbsp;<strong>Robot Java<\/strong>&nbsp;tutorial if you need help in remembering how to do this.<\/p>\n\n\n\n<p>You should now be ready to tune the speed of your drive motors.&nbsp; Again, you can look back at the&nbsp;<strong>Minibot<\/strong>&nbsp;tutorial to refresh your memory of how to do this but the following are the basic steps involved:<\/p>\n\n\n\n<ol><li>You should create a&nbsp;<strong>Calibrate Drive&nbsp;<\/strong>command&nbsp;and tie it to a button.<\/li><li>Using this command, drive the motors at full power (using&nbsp;<strong>setPower<\/strong>) and log the speed for the left and right wheels. This will tell you the maximum possible speed for each of the motors.<\/li><li>First set the&nbsp;<strong><a rel=\"noreferrer noopener\" href=\"\/RobotCoreDoc\/classrobot_core_1_1_smart_motor.html#a049efdcb0ef5df4ba5803eab8a20498f\" target=\"_blank\">F term<\/a><\/strong>&nbsp;of the PID controller for each of the motors so that they are running at about 75% of the maximum speed (using&nbsp;<strong>setSpeed<\/strong>).<\/li><li>Next add a&nbsp;<strong><a rel=\"noreferrer noopener\" href=\"\/RobotCoreDoc\/classrobot_core_1_1_smart_motor.html#a9131b97e84e9d54bd6ecaa9aab758dd5\" target=\"_blank\">P&nbsp;term<\/a><\/strong>&nbsp;and increase it until you see the speeds become unstable, and then back off a bit.<\/li><li>Finally add an&nbsp;<strong><a rel=\"noreferrer noopener\" href=\"\/RobotCoreDoc\/classrobot_core_1_1_smart_motor.html#a4869ae9931781ce4dddb31ee653d0905\" target=\"_blank\">I term<\/a><\/strong>&nbsp;and increase it until you see the speeds become unstable, and then back off a bit. Remember to set an appropriate&nbsp;<strong><a rel=\"noreferrer noopener\" href=\"\/RobotCoreDoc\/classrobot_core_1_1_smart_motor.html#a1f67efaae869080b3b7f3baa57c821a7\" target=\"_blank\">IZone<\/a><\/strong>.<\/li><li>Once you have it tuned for 75% speed, check the tuning at 50% and 25%. Since it is not possible to have ideal <strong>F<\/strong>, <strong>P <\/strong>and <strong>I <\/strong>terms at all speeds, only change the&nbsp;<strong>P<\/strong>&nbsp;and&nbsp;<strong>I<\/strong>&nbsp;terms if there are significant problems at those speeds.<\/li><\/ol>\n\n\n\n<p>In my case, I found that the max speed was around 2500 and the final calibration graphs appeared as follows:<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full is-resized\"><a href=\"\/wp-content\/uploads\/2022\/05\/Calibration.jpg\"><img loading=\"lazy\" src=\"\/wp-content\/uploads\/2022\/05\/Calibration.jpg\" alt=\"\" class=\"wp-image-2152\" width=\"448\" height=\"262\" srcset=\"http:\/\/gabybot.com\/wp-content\/uploads\/2022\/05\/Calibration.jpg 1021w, http:\/\/gabybot.com\/wp-content\/uploads\/2022\/05\/Calibration-300x175.jpg 300w, http:\/\/gabybot.com\/wp-content\/uploads\/2022\/05\/Calibration-150x87.jpg 150w, http:\/\/gabybot.com\/wp-content\/uploads\/2022\/05\/Calibration-768x448.jpg 768w\" sizes=\"(max-width: 448px) 100vw, 448px\" \/><\/a><\/figure><\/div>\n\n\n\n<p>Once you have your drive motors calibrated, you can change your&nbsp;<strong>Arcade Drive<\/strong>&nbsp;command to use speed instead of power if you like.<\/p>\n\n\n\n<p><a href=\"\/shooter-subsystem\/\" data-type=\"page\"> Next: Shooter Subsystem<\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>The&nbsp;Drive Subsystem&nbsp;performs the same function as its counterpart in the&nbsp;Minibot&nbsp;tutorial, namely it will control the two drive motors. In fact you may want to refer to your code for that previous robot as an aid. The motors for this new robot will use the same&nbsp;PWMMotor class that you used previously. You are, of course, going&hellip;&nbsp;<a href=\"http:\/\/gabybot.com\/drive-subsystem-2\/\" class=\"\" rel=\"bookmark\">Read More &raquo;<span class=\"screen-reader-text\">Drive Subsystem<\/span><\/a><\/p>\n","protected":false},"author":2,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"open","template":"","meta":{"neve_meta_sidebar":"","neve_meta_container":"","neve_meta_enable_content_width":"","neve_meta_content_width":0,"neve_meta_title_alignment":"","neve_meta_author_avatar":"","neve_post_elements_order":"","neve_meta_disable_header":"","neve_meta_disable_footer":"","neve_meta_disable_title":""},"_links":{"self":[{"href":"http:\/\/gabybot.com\/wp-json\/wp\/v2\/pages\/261"}],"collection":[{"href":"http:\/\/gabybot.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"http:\/\/gabybot.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"http:\/\/gabybot.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"http:\/\/gabybot.com\/wp-json\/wp\/v2\/comments?post=261"}],"version-history":[{"count":21,"href":"http:\/\/gabybot.com\/wp-json\/wp\/v2\/pages\/261\/revisions"}],"predecessor-version":[{"id":3132,"href":"http:\/\/gabybot.com\/wp-json\/wp\/v2\/pages\/261\/revisions\/3132"}],"wp:attachment":[{"href":"http:\/\/gabybot.com\/wp-json\/wp\/v2\/media?parent=261"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}